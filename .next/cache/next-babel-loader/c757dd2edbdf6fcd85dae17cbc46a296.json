{"ast":null,"code":"var _jsxFileName = \"/Users/sushant/Dev/next-my-app/pages/user/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport { SimpleGrid, Text, Alert } from '@chakra-ui/core';\n\nconst fetcher = async url => {\n  const res = await fetch(url);\n\n  if (!res.ok) {\n    throw Error('Something crappy happened!!');\n  }\n\n  const data = await res.json();\n  return data;\n};\n\nconst User = () => {\n  const router = useRouter();\n\n  const _router$query = router.query,\n        {\n    id\n  } = _router$query,\n        rest = _objectWithoutProperties(_router$query, [\"id\"]);\n\n  const {\n    data,\n    error\n  } = useSWR('api/user/${id}', fetcher);\n\n  if (error) {\n    __jsx(Alert, {\n      status: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }, \"Loading failed: \", error.message);\n  }\n\n  return __jsx(SimpleGrid, {\n    columns: 2,\n    width: \"2xs\",\n    spacingY: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    fontWeight: \"bold\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"UserID\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, data.id), __jsx(Text, {\n    fontWeight: \"bold\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Name\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, data.name), __jsx(Text, {\n    fontWeight: \"bold\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Email\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, data.email));\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/sushant/Dev/next-my-app/pages/user/[id].tsx"],"names":["useRouter","useSWR","SimpleGrid","Text","Alert","fetcher","url","res","fetch","ok","Error","data","json","User","router","query","id","rest","error","message","name","email"],"mappings":";;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,iBAAxC;;AAEA,MAAMC,OAAO,GAAG,MAAOC,GAAP,IAAuB;AACrC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;;AACA,MAAG,CAACC,GAAG,CAACE,EAAR,EAAY;AACV,UAAMC,KAAK,CAAC,6BAAD,CAAX;AACD;;AACD,QAAMC,IAAiD,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAhE;AACA,SAAOD,IAAP;AACD,CAPD;;AASA,MAAME,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGd,SAAS,EAAxB;;AACA,wBAAwBc,MAAM,CAACC,KAA/B;AAAA,QAAM;AAAEC,IAAAA;AAAF,GAAN;AAAA,QAAeC,IAAf;;AACA,QAAM;AAAEN,IAAAA,IAAF;AAAQO,IAAAA;AAAR,MAAkBjB,MAAM,CAAC,gBAAD,EAAmBI,OAAnB,CAA9B;;AAEA,MAAGa,KAAH,EAAU;AACR,UAAC,KAAD;AAAO,MAAA,MAAM,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwCA,KAAK,CAACC,OAA9C;AACD;;AAED,SACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAC,KAA9B;AAAoC,IAAA,QAAQ,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,IAAI,CAACK,EAAZ,CAFF,EAIE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,IAAI,CAACS,IAAZ,CALF,EAOE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,EAQE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,IAAI,CAACU,KAAZ,CARF,CADF;AAYD,CArBD;;AAuBA,eAAeR,IAAf","sourcesContent":["import {useRouter} from 'next/router';\nimport useSWR from 'swr';\nimport { SimpleGrid, Text, Alert } from '@chakra-ui/core';\n\nconst fetcher = async (url: string) => {\n  const res = await fetch(url);\n  if(!res.ok) {\n    throw Error('Something crappy happened!!');\n  }\n  const data: { id: string; name: string; email: string } = await res.json();\n  return data;\n}\n\nconst User = () => {\n  const router = useRouter();\n  const { id, ...rest } = router.query;\n  const { data, error } = useSWR('api/user/${id}', fetcher);  \n\n  if(error) {\n    <Alert status=\"error\">Loading failed: { error.message }</Alert>\n  }\n\n  return (\n    <SimpleGrid columns={2} width=\"2xs\" spacingY={4}>\n      <Text fontWeight=\"bold\" marginRight={4}>UserID</Text>\n      <Text>{data.id}</Text>\n\n      <Text fontWeight=\"bold\" marginRight={4}>Name</Text>\n      <Text>{data.name}</Text>\n\n      <Text fontWeight=\"bold\" marginRight={4}>Email</Text>\n      <Text>{data.email}</Text>\n    </SimpleGrid>\n  );\n}\n\nexport default User;"]},"metadata":{},"sourceType":"module"}